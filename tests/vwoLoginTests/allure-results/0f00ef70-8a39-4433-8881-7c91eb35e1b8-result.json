{"name": "test_vwologin_pf", "status": "broken", "statusDetails": {"message": "seleniumpagefactory.Pagefactory.ElementNotFoundException: An exception of type TimeoutException occurred. With Element -: password - locator: (name, #password)", "trace": "self = <tests.pageObjects.loginPagePF.LoginPage object at 0x104f21910>\nloc = 'password'\n\n    def __getattr__(self, loc):\n    \n        if self.mobile_test == True:\n            if loc in self.locators.keys():\n                element = self.find_element_by_accessibility_id(self.locators[loc][1])\n                return element\n        else:\n            if loc in self.locators.keys():\n                locator = (self.TYPE_OF_LOCATORS[self.locators[loc][0].lower()], self.locators[loc][1])\n                try:\n>                   element = WebDriverWait(self.driver, self.timeout).until(\n                        EC.presence_of_element_located(locator)\n                    )\n\n../../venv/lib/python3.11/site-packages/seleniumpagefactory/Pagefactory.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a84bb8f983c6f175f38ed9e4cb53bbc8\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x104f1ca40>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x00000001018ef638 chromedriver + 5002808\nE       1   chromedriver                        0x00000001018e6a53 chromedriver + 4966995\nE       2   chromedriver                        0x0000000101497a57 chromedriver + 449111\nE       3   chromedriver                        0x00000001014ddd05 chromedriver + 736517\nE       4   chromedriver                        0x00000001014ddec1 chromedriver + 736961\nE       5   chromedriver                        0x0000000101521f04 chromedriver + 1015556\nE       6   chromedriver                        0x000000010150441d chromedriver + 893981\nE       7   chromedriver                        0x000000010151f391 chromedriver + 1004433\nE       8   chromedriver                        0x00000001015041c3 chromedriver + 893379\nE       9   chromedriver                        0x00000001014cfdf9 chromedriver + 679417\nE       10  chromedriver                        0x00000001014d0fde chromedriver + 683998\nE       11  chromedriver                        0x00000001018ac2d9 chromedriver + 4727513\nE       12  chromedriver                        0x00000001018b12de chromedriver + 4747998\nE       13  chromedriver                        0x000000010186f2c9 chromedriver + 4477641\nE       14  chromedriver                        0x00000001018b202d chromedriver + 4751405\nE       15  chromedriver                        0x00000001018850ec chromedriver + 4567276\nE       16  chromedriver                        0x00000001018cf7f8 chromedriver + 4872184\nE       17  chromedriver                        0x00000001018cf9b7 chromedriver + 4872631\nE       18  chromedriver                        0x00000001018dfa1f chromedriver + 4938271\nE       19  libsystem_pthread.dylib             0x00007ff80d3ea4e1 _pthread_start + 125\nE       20  libsystem_pthread.dylib             0x00007ff80d3e5f6b thread_start + 15\n\n../../venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.vwoLoginTests.test_vwologin_pf.TestVWOLogin object at 0x104ef7390>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a84bb8f983c6f175f38ed9e4cb53bbc8\")>\n\n    @pytest.mark.positive\n    def test_vwologin_pf(self, driver):\n        loginPage = LoginPage(driver)\n>       loginPage.login_to_vwo(\"contact+augg@thetestingacademy.com\", \"Wingify@123\")\n\ntest_vwologin_pf.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pageObjects/loginPagePF.py:25: in login_to_vwo\n    self.password.set_text(pwd)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.pageObjects.loginPagePF.LoginPage object at 0x104f21910>\nloc = 'password'\n\n    def __getattr__(self, loc):\n    \n        if self.mobile_test == True:\n            if loc in self.locators.keys():\n                element = self.find_element_by_accessibility_id(self.locators[loc][1])\n                return element\n        else:\n            if loc in self.locators.keys():\n                locator = (self.TYPE_OF_LOCATORS[self.locators[loc][0].lower()], self.locators[loc][1])\n                try:\n                    element = WebDriverWait(self.driver, self.timeout).until(\n                        EC.presence_of_element_located(locator)\n                    )\n                except (StaleElementReferenceException, NoSuchElementException, TimeoutException) as e:\n>                   raise ElementNotFoundException(\n                        \"An exception of type \" + type(e).__name__ +\n                        \" occurred. With Element -: \" + loc +\n                        \" - locator: (\" + locator[0] + \", \" + locator[1] + \")\"\n                    )\nE                   seleniumpagefactory.Pagefactory.ElementNotFoundException: An exception of type TimeoutException occurred. With Element -: password - locator: (name, #password)\n\n../../venv/lib/python3.11/site-packages/seleniumpagefactory/Pagefactory.py:57: ElementNotFoundException"}, "start": 1693220029937, "stop": 1693220040479, "uuid": "82bcfe0f-f79e-4974-9bcc-e48c508207d1", "historyId": "d785033fdc4331a498903d28e4bca011", "testCaseId": "d785033fdc4331a498903d28e4bca011", "fullName": "tests.vwoLoginTests.test_vwologin_pf.TestVWOLogin#test_vwologin_pf", "labels": [{"name": "tag", "value": "positive"}, {"name": "parentSuite", "value": "tests.vwoLoginTests"}, {"name": "suite", "value": "test_vwologin_pf"}, {"name": "subSuite", "value": "TestVWOLogin"}, {"name": "host", "value": "MBP-C02DRR20MD6M"}, {"name": "thread", "value": "91276-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.vwoLoginTests.test_vwologin_pf"}]}