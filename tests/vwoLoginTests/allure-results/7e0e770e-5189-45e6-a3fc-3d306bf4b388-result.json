{"name": "test_vwologin", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"login-username\"]\"}\n  (Session info: chrome=116.0.5845.140); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n0   chromedriver                        0x0000000105aa6638 chromedriver + 5002808\n1   chromedriver                        0x0000000105a9da53 chromedriver + 4966995\n2   chromedriver                        0x000000010564ea57 chromedriver + 449111\n3   chromedriver                        0x0000000105694d05 chromedriver + 736517\n4   chromedriver                        0x0000000105694ec1 chromedriver + 736961\n5   chromedriver                        0x00000001056d8f04 chromedriver + 1015556\n6   chromedriver                        0x00000001056bb41d chromedriver + 893981\n7   chromedriver                        0x00000001056d6391 chromedriver + 1004433\n8   chromedriver                        0x00000001056bb1c3 chromedriver + 893379\n9   chromedriver                        0x0000000105686df9 chromedriver + 679417\n10  chromedriver                        0x0000000105687fde chromedriver + 683998\n11  chromedriver                        0x0000000105a632d9 chromedriver + 4727513\n12  chromedriver                        0x0000000105a682de chromedriver + 4747998\n13  chromedriver                        0x0000000105a262c9 chromedriver + 4477641\n14  chromedriver                        0x0000000105a6902d chromedriver + 4751405\n15  chromedriver                        0x0000000105a3c0ec chromedriver + 4567276\n16  chromedriver                        0x0000000105a867f8 chromedriver + 4872184\n17  chromedriver                        0x0000000105a869b7 chromedriver + 4872631\n18  chromedriver                        0x0000000105a96a1f chromedriver + 4938271\n19  libsystem_pthread.dylib             0x00007ff816ccb4e1 _pthread_start + 125\n20  libsystem_pthread.dylib             0x00007ff816cc6f6b thread_start + 15", "trace": "self = <tests.vwoLoginTests.test_vwologin.TestVWOLogin object at 0x10f7f4e50>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f13113cc248e59e0948c82f3f82ac80e\")>\n\n    @pytest.mark.usefixtures(\"setup\")\n    def test_vwologin(self, setup):\n        driver = setup\n        loginPage = LoginPage(driver)\n>       loginPage.login_to_vwo(\"contact+augg@thetestingacademy.com\", \"Wingify@123\")\n\ntest_vwologin.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../pageObjects/loginPage.py:43: in login_to_vwo\n    self.get_username().send_keys(user)\n../pageObjects/loginPage.py:30: in get_username\n    return self.driver.find_element(*LoginPage.username)\n../../venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:739: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10f2d2650>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...ff816ccb4e1 _pthread_start + 125\\\\n20  libsystem_pthread.dylib             0x00007ff816cc6f6b thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"login-username\"]\"}\nE         (Session info: chrome=116.0.5845.140); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       0   chromedriver                        0x0000000105aa6638 chromedriver + 5002808\nE       1   chromedriver                        0x0000000105a9da53 chromedriver + 4966995\nE       2   chromedriver                        0x000000010564ea57 chromedriver + 449111\nE       3   chromedriver                        0x0000000105694d05 chromedriver + 736517\nE       4   chromedriver                        0x0000000105694ec1 chromedriver + 736961\nE       5   chromedriver                        0x00000001056d8f04 chromedriver + 1015556\nE       6   chromedriver                        0x00000001056bb41d chromedriver + 893981\nE       7   chromedriver                        0x00000001056d6391 chromedriver + 1004433\nE       8   chromedriver                        0x00000001056bb1c3 chromedriver + 893379\nE       9   chromedriver                        0x0000000105686df9 chromedriver + 679417\nE       10  chromedriver                        0x0000000105687fde chromedriver + 683998\nE       11  chromedriver                        0x0000000105a632d9 chromedriver + 4727513\nE       12  chromedriver                        0x0000000105a682de chromedriver + 4747998\nE       13  chromedriver                        0x0000000105a262c9 chromedriver + 4477641\nE       14  chromedriver                        0x0000000105a6902d chromedriver + 4751405\nE       15  chromedriver                        0x0000000105a3c0ec chromedriver + 4567276\nE       16  chromedriver                        0x0000000105a867f8 chromedriver + 4872184\nE       17  chromedriver                        0x0000000105a869b7 chromedriver + 4872631\nE       18  chromedriver                        0x0000000105a96a1f chromedriver + 4938271\nE       19  libsystem_pthread.dylib             0x00007ff816ccb4e1 _pthread_start + 125\nE       20  libsystem_pthread.dylib             0x00007ff816cc6f6b thread_start + 15\n\n../../venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException"}, "start": 1693360085851, "stop": 1693360091334, "uuid": "b9948e2a-6506-410c-8685-452144b94b75", "historyId": "6838105f2bb931fb2480703d2a7a0935", "testCaseId": "6838105f2bb931fb2480703d2a7a0935", "fullName": "tests.vwoLoginTests.test_vwologin.TestVWOLogin#test_vwologin", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "tests.vwoLoginTests"}, {"name": "suite", "value": "test_vwologin"}, {"name": "subSuite", "value": "TestVWOLogin"}, {"name": "host", "value": "MBP-C02DRR20MD6M"}, {"name": "thread", "value": "6670-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.vwoLoginTests.test_vwologin"}]}